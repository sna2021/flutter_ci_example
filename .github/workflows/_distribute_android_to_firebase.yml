on:
  workflow_call:
    inputs:
      build_type:
        description: 'apk or appbundle'
        required: true
        type: string
        default: apk
      flavor:
        description: 'prod or dev'
        required: true
        type: string
        default: dev
      groups:
        description: 'Название группы тестеров из Firebase Distribution'
        required: true
        type: string
        default: inner
      release_notes:
        required: false
        description: 'Release Note'
        type: string
    secrets:
      firebase_app_id:
        description: 'Firebase App ID'
        required: true
      firebase_token:
        description: 'Firebase Token'
        required: true
jobs:
  build:
    runs-on: [ self-hosted ]
    steps:
      - name: Read Flutter version
        uses: KJ002/read-yaml@1.5
        id: flutter_version
        with:
          file: './pubspec.yaml'
          key-path: '["environment","flutter"]'

      - name: Get Flutter
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ steps.flutter_version.outputs.data }}
          channel: 'stable'

      - name: Check flow
        run: sh ./.github/scripts/flutter_check_flow.sh

      #TODO вернуть когда будут исправлены все warnings
      #      - name: Check flow
      #        run: sh ./.github/scripts/flutter_check_flow.sh

      #TODO вернуть кода добавим
      #      - name: Decrypt Android keys
      #        run: sh ./.github/scripts/android/decrypt_android_keys.sh
      #        env:
      #          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}

      - name: Build apk
        run: sh ./.github/scripts/android/build_apk.sh
        env:
          BUILD_FLAVOR: ${{ inputs.flavor }}
          ANDROID_BUILD_TYPE: ${{ inputs.build_type }}

      - name: Distribute to firebase
        run: sh ./.github/scripts/firebase_distributor.sh
        env:
          firebase_app_id: ${{ secrets.firebase_app_id }}
          firebase_token: ${{ secrets.firebase_token }}
          file_path: ./build/app/outputs/flutter-apk/app-release.apk
          groups: ${{ inputs.groups }}
          release_note: ${{ inputs.release_notes }}